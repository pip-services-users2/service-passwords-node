// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "pip-services.users.passwords.version1";
option java_outer_classname = "PasswordsProtoV1";
option objc_class_prefix = "PASSWORDS_CMD_V1";

package passwords_v1;

message ErrorDescription {
  string type = 1;
  string category = 2;
  string code = 3;
  string correlation_id = 4;
  string status = 5;
  string message = 6;
  string cause = 7;
  string stack_trace = 8;
  map<string, string> details = 9;
}

message PagingParams {
    int64 skip = 1;
    int32 take = 2;
    bool total = 3;
}

message PasswordInfo {
    string id = 1;
    string change_time = 3;
    bool locked = 4;
    string lock_time = 5;
}

// The passwords service definition.
service Passwords {
  rpc get_password_info (PasswordIdRequest) returns (PasswordInfoReply) {}
  rpc validate_password (PasswordValueRequest) returns (PasswordEmptyReply) {}
  rpc set_password (PasswordIdAndValueRequest) returns (PasswordEmptyReply) {}
  rpc set_temp_password (PasswordIdRequest) returns (PasswordValueReply) {}
  rpc delete_password (PasswordIdRequest) returns (PasswordEmptyReply) {}
  rpc authenticate (PasswordIdAndValueRequest) returns (PasswordAuthenticateReply) {}
  rpc change_password (PasswordIdAndValuesRequest) returns (PasswordEmptyReply) {}
  rpc validate_code (PasswordIdAndCodeRequest) returns (PasswordValidReply) {}
  rpc reset_password (PasswordIdAndCodeAndValueRequest) returns (PasswordEmptyReply) {}
  rpc recover_password (PasswordIdRequest) returns (PasswordEmptyReply) {}
}

// The request message containing the user id request.
message PasswordIdRequest {
  string correlation_id = 1;
  string user_id = 2;
}

// The request message containing the password value request.
message PasswordValueRequest {
  string correlation_id = 1;
  string password = 2;
}

// The request message containing the password user id and value request.
message PasswordIdAndValueRequest {
  string correlation_id = 1;
  string user_id = 2;
  string password = 3;
}

// The request message containing the password user id and old/new values request.
message PasswordIdAndValuesRequest {
  string correlation_id = 1;
  string user_id = 2;
  string old_password = 3;
  string new_password = 4;
}

// The request message containing the password user id and code request.
message PasswordIdAndCodeRequest {
  string correlation_id = 1;
  string user_id = 2;
  string code = 3;
}

// The request message containing the password user id, code and value request.
message PasswordIdAndCodeAndValueRequest {
  string correlation_id = 1;
  string user_id = 2;
  string code = 3;
  string password = 4;
}

// The response message containing the password info response
message PasswordInfoReply {
  ErrorDescription error = 1;
  PasswordInfo info = 2;
}

// The response message containing the password empty response
message PasswordEmptyReply {
  ErrorDescription error = 1;
}

// The response message containing the password value response
message PasswordValueReply {
  ErrorDescription error = 1;
  string password = 2;
}

// The response message containing the password authenticated response
message PasswordAuthenticateReply {
  ErrorDescription error = 1;
  bool authenticated = 2;
}

// The response message containing the password valid response
message PasswordValidReply {
  ErrorDescription error = 1;
  bool valid = 2;
}
